{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Home","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","disabled","length","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bde56e0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : 'Set Title Here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function Home(props) {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpBtn = () => {\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoBtn = () => {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearBtn = () => {\r\n        setText('');\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleCopyBtn = () => {\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaceBtn = () => {\r\n        setText(text.split(/[ ]+/).join(' '));\r\n        props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{color : props.mode === 'light' ? '#042743' : 'white'}}>\r\n            <h2 className='my-2'>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"6\" style={{backgroundColor : props.mode === 'light' ? 'white' : '#13466e', color : props.mode === 'light' ? 'black' : 'white'}}></textarea>\r\n            </div>\r\n            <button type=\"button\" disabled={text.length === 0} onClick={handleUpBtn} className=\"btn btn-primary mx-1 my-1\">Convert to Uppercase</button>\r\n            <button type=\"button\" disabled={text.length === 0} onClick={handleLoBtn} className=\"btn btn-primary mx-1 my-1\">Convert to Lowercase</button>\r\n            <button type=\"button\" disabled={text.length === 0} onClick={handleClearBtn} className=\"btn btn-primary mx-1 my-1\">Clear Text</button>\r\n            <button type=\"button\" disabled={text.length === 0} onClick={handleCopyBtn} className=\"btn btn-primary mx-1 my-1\">Copy Text</button>\r\n            <button type=\"button\" disabled={text.length === 0} onClick={handleExtraSpaceBtn} className=\"btn btn-primary mx-1 my-1\">Remove Extra Spaces</button>\r\n        </div>\r\n        <div style={{color : props.mode === 'light' ? '#042743' : 'white'}}>\r\n            <h2 className='my-3'>Your Text Summary</h2>\r\n            <p>{text.split(' ').filter((element) => {return element.length !== 0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * (text.split(' ').filter((element) => {return element.length !== 0}).length)} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length > 0 ? text : 'Nothing to Preview!'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return word.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height : '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react'\nimport Home from './Components/Home';\nimport Alert from './Components/Alert';\n\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState('');\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode Enabled!\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled!\", \"success\");\n    }\n  }\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n    <Navbar mode={mode} toggleMode={toggleMode} title='TextUtils'/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n          <Home showAlert={showAlert} mode={mode} heading=\"Enter your text to analyze\"/>\n    </div>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}